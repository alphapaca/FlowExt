$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:com.hoc081098.flowext////PointingToDeclaration/-flow-ext/com.hoc081098.flowext/index.html
$dokka.location:com.hoc081098.flowext//bufferCount/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Int?/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/buffer-count.html
$dokka.location:com.hoc081098.flowext//concat/#kotlin.Array[kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat.html
$dokka.location:com.hoc081098.flowext//concat/#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat.html
$dokka.location:com.hoc081098.flowext//concat/#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat.html
$dokka.location:com.hoc081098.flowext//concat/#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat.html
$dokka.location:com.hoc081098.flowext//concat/#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat.html
$dokka.location:com.hoc081098.flowext//concatWith/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat-with.html
$dokka.location:com.hoc081098.flowext//concatWith/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat-with.html
$dokka.location:com.hoc081098.flowext//concatWith/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat-with.html
$dokka.location:com.hoc081098.flowext//concatWith/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat-with.html
$dokka.location:com.hoc081098.flowext//concatWith/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/concat-with.html
$dokka.location:com.hoc081098.flowext//dematerialize/kotlinx.coroutines.flow.Flow[com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/dematerialize.html
$dokka.location:com.hoc081098.flowext//exhaustAll/kotlinx.coroutines.flow.Flow[kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/exhaust-all.html
$dokka.location:com.hoc081098.flowext//exhaustMap/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/exhaust-map.html
$dokka.location:com.hoc081098.flowext//flatMapFirst/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/flat-map-first.html
$dokka.location:com.hoc081098.flowext//flattenFirst/kotlinx.coroutines.flow.Flow[kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/flatten-first.html
$dokka.location:com.hoc081098.flowext//interval/#kotlin.Long#kotlin.Long/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/interval.html
$dokka.location:com.hoc081098.flowext//interval/#kotlin.time.Duration#kotlin.time.Duration/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/interval.html
$dokka.location:com.hoc081098.flowext//map/com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/map.html
$dokka.location:com.hoc081098.flowext//mapTo/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/map-to.html
$dokka.location:com.hoc081098.flowext//materialize/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/materialize.html
$dokka.location:com.hoc081098.flowext//range/#kotlin.Int#kotlin.Int/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/range.html
$dokka.location:com.hoc081098.flowext//startWithArray/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/start-with-array.html
$dokka.location:com.hoc081098.flowext//startWithFlow/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/start-with-flow.html
$dokka.location:com.hoc081098.flowext//startWithItem/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/start-with-item.html
$dokka.location:com.hoc081098.flowext//takeUntil/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/take-until.html
$dokka.location:com.hoc081098.flowext//throwableOrNull/com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/throwable-or-null.html
$dokka.location:com.hoc081098.flowext//throwableOrThrow/com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/throwable-or-throw.html
$dokka.location:com.hoc081098.flowext//timer/#TypeParam(bounds=[kotlin.Any?])#kotlin.Long/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/timer.html
$dokka.location:com.hoc081098.flowext//timer/#TypeParam(bounds=[kotlin.Any?])#kotlin.time.Duration/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/timer.html
$dokka.location:com.hoc081098.flowext//valueOrNull/com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/value-or-null.html
$dokka.location:com.hoc081098.flowext//valueOrThrow/com.hoc081098.flowext.Event[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/value-or-throw.html
$dokka.location:com.hoc081098.flowext//withLatestFrom/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/with-latest-from.html
$dokka.location:com.hoc081098.flowext//withLatestFrom/kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.flow.Flow[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/with-latest-from.html
$dokka.location:com.hoc081098.flowext/Event.Complete///PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-complete/index.html
$dokka.location:com.hoc081098.flowext/Event.Complete/toString/#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-complete/to-string.html
$dokka.location:com.hoc081098.flowext/Event.Error///PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-error/index.html
$dokka.location:com.hoc081098.flowext/Event.Error/Error/#kotlin.Throwable/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-error/-error.html
$dokka.location:com.hoc081098.flowext/Event.Error/throwable/#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-error/throwable.html
$dokka.location:com.hoc081098.flowext/Event.Error/toString/#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-error/to-string.html
$dokka.location:com.hoc081098.flowext/Event.Value///PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-value/index.html
$dokka.location:com.hoc081098.flowext/Event.Value/Value/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-value/-value.html
$dokka.location:com.hoc081098.flowext/Event.Value/toString/#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-value/to-string.html
$dokka.location:com.hoc081098.flowext/Event.Value/value/#/PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/-value/value.html
$dokka.location:com.hoc081098.flowext/Event///PointingToDeclaration/-flow-ext/com.hoc081098.flowext/-event/index.html
com.hoc081098.flowext

